/* Rainbow v1.1 rainbowco.de | included languages: shell, generic, javascript, python, html, php, ruby, css */
window.Rainbow=function(){function r(b){var c=b.getAttribute&&b.getAttribute("data-language")||null;if(!c){var b=b.attributes.length,d;for(d=0;d<b;++d)"data-language"==="data-language"[d].nodeName&&(c="data-language"[d].nodeValue)}return c}function D(b){b.className+=b.className?" rainbow":"rainbow"}function E(b,c){for(var d in g[e]){d=parseInt(d,10);if(b==d&&c==g[e][d]?0:b<=d&&c>=g[e][d])delete g[e][d],delete i[e][d];if(b>=d&&b<g[e][d]||c>d&&c<g[e][d])return!0}return!1}function s(b,c){return'<span class="'+
b.replace(/\./g," ")+(l?" "+l:"")+'">'+c+"</span>"}function F(b,c){var d=0,f;for(f=1;f<c;++f)b[f]&&(d+=b[f].length);return d}function t(b,c,d,f){var k=b.exec(d);if(k){++u;!c.name&&c.matches[0]&&(c.name=c.matches[0],delete c.matches[0]);var h=k[0],j=k.index,v=k[0].length+j,m=function(){function k(){t(b,c,d,f)}u%100>0?k():setTimeout(k,0)};if(E(j,v))m();else{var n=w(c.matches),l=function(b,d,f){if(b>=d.length)f(h);else{var e=function(){l(++b,d,f)},g=k[d[b]];if(g){var j=c.matches[d[b]],i=j.language;if(i)o(g,
i,function(b){h=h.replace(g,b);e()});else if(typeof j==="object")x(g,j.length?j:[j],function(b){h=h.replace(g,b);e()});else{h=y(F(k,d[b]),g,s(j,g),h);e()}}else e()}};l(0,n,function(b){c.name&&(b=s(c.name,b));if(!i[e]){i[e]={};g[e]={}}i[e][j]={replace:k[0],"with":b};g[e][j]=v;m()})}}else f()}function G(b){var c=n[b]||[],d=n[z]||[];return A[b]?c:c.concat(d)}function y(b,c,d,f){return f.substr(0,b)+f.substr(b).replace(c,d)}function w(b){var c=[],d;for(d in b)b.hasOwnProperty(d)&&c.push(d);return c.sort(function(b,
d){return d-b})}function x(b,c,d){function f(c,h){h<c.length?t(c[h].pattern,c[h],b,function(){f(c,++h)}):H(b,function(b){delete i[e];delete g[e];--e;d(b)})}++e;f(c,0)}function H(b,c){function d(b,c,f,g){if(f<c.length){++B;var m=c[f],l=i[e][m],b=y(m,l.replace,l["with"],b),m=function(){d(b,c,++f,g)};0<B%250?m():setTimeout(m,0)}else g(b)}var f=w(i[e]);d(b,f,0,c)}function o(b,c,d){x(b,G(c),function(b){d(b)})}function p(b,c,d){if(c<b.length){var f=r(b[c])||r(b[c].parentNode);return!(-1<(" "+b[c].className+
" ").indexOf(" rainbow "))&&f?(f=f.toLowerCase(),D(b[c]),o(b[c].innerHTML,f,function(e){b[c].innerHTML=e;i={};g={};q&&q(b[c],f);setTimeout(function(){p(b,++c,d)},0)})):p(b,++c,d)}d&&d()}function C(b,c){var d=(b||document).getElementsByTagName("pre"),f=(b||document).getElementsByTagName("code"),e,g=[];for(e=0;e<f.length;++e)g.push(f[e]);for(e=0;e<d.length;++e)d[e].getElementsByTagName("code").length||g.push(d[e]);p(g,0,c)}var i={},g={},n={},A={},e=0,z=0,u=0,B=0,l,q;return{extend:function(b,c,d){1==
arguments.length&&(c=b,b=z);A[b]=d;n[b]=c.concat(n[b]||[])},c:function(b){q=b},b:function(b){l=b},color:function(b,c,d){if("string"==typeof b)return o(b,c,d);if("function"==typeof b)return C(null,b);C(b instanceof Event?null:b,c)}}}();window.addEventListener?window.addEventListener("load",Rainbow.color,!1):window.attachEvent("onload",Rainbow.color);Rainbow.onHighlight=Rainbow.c;Rainbow.addClass=Rainbow.b;Rainbow.color=Rainbow.color;window.a=window.a||{};
Rainbow.extend("shell",[{name:"shell",matches:{1:{language:"shell"}},pattern:/\$\(([\s\S]*?)\)/gm},{matches:{2:"string"},pattern:/(\(|\s|\[|\=)(('|")[\s\S]*?(\3))/gm},{name:"keyword.operator",pattern:/&lt;|&gt;|&amp;/g},{name:"comment",pattern:/\#[\s\S]*?$/gm},{name:"meta.function",pattern:/(.+?)(?=\(\)\s{0,}\{)/g},{name:"support.command",pattern:/\b(echo|rm|ls|(mk|rm)dir|cd|find|cp|exit|pwd|exec|trap|source|shift|unset)/g},{matches:{1:"keyword"},pattern:/\b(break|case|continue|do|done|elif|else|esac|eval|export|fi|for|function|if|in|local|return|set|then|unset|until|while)(?=\(|\b)/g}],!0);window.a=window.a||{};
Rainbow.extend([{matches:{1:{name:"keyword.operator",pattern:/\=/g},2:"string"},pattern:/(\(|\s|\[|\=)(('|")[\s\S]*?(\3))/gm},{name:"comment",pattern:/\/\*[\s\S]*?\*\/|(\/\/|\#)[\s\S]*?$/gm},{name:"integer",pattern:/\b(0x[\da-f]+|\d+)\b/g},{name:"constant",pattern:/\b[A-Z0-9_]{2,}\b/g},{matches:{1:"keyword"},pattern:/\b(and|array|as|bool(ean)?|c(atch|har|lass|onst)|d(ef|elete|ie|o(uble)?)|e(cho|lse(if)?|xit|xtends)|f(inally|loat|or(each)?|unction)|global|if|import|int(eger)?|long|new|object|or|pr(int|ivate|otected)|public|return|self|st(ring|ruct|atic)|switch|th(en|is|row)|try|(un)?signed|var|void|while)(?=\(|\b)/g},{name:"constant.language",
pattern:/true|false|null/g},{name:"keyword.operator",pattern:/\+|\!|\-|&(gt|lt|amp);|\||\*|\=/g},{matches:{1:"function.call"},pattern:/(\w+?)(?=\()/g},{matches:{1:"keyword",2:"meta.function-call"},pattern:/(function)\s(.*?)(?=\()/g}]);window.a=window.a||{};
Rainbow.extend("javascript",[{name:"selector",pattern:/\s\$(?=\.|\()/g},{name:"support",pattern:/\b(window|document)\b/g},{matches:{1:"support.property"},pattern:/\.(length|node(Name|Value))\b/g},{matches:{1:"support.function"},pattern:/(setTimeout|setInterval)(?=\()/g},{matches:{1:"support.method"},pattern:/\.(getAttribute|push|getElementById|getElementsByClassName|log|setTimeout|setInterval)(?=\()/g},{name:"constant.regex",matches:{1:"support.regex.open",2:{name:"constant.regex.escape",pattern:/\\(.){1}/g},
3:"support.regex.close",4:"support.regex.modifier"},pattern:/(\/)(.+)(\/)([igm]{0,3})/g},{name:"meta.function-call",pattern:/(\w+)(?=:\s{0,}function)/g},{matches:{2:[{name:"string",pattern:/('|")(.*?)(\1)/g},{name:"meta.script-tag",pattern:/(\w+)/g}]},pattern:/(&lt;\/?)(script(.*?))(&gt;)/g}]);window.a=window.a||{};
Rainbow.extend("python",[{name:"variable",pattern:/\b[A-Z0-9_]{2,}\b/g},{name:"variable.self",pattern:/self/g},{name:"constant.language",pattern:/None|True|False/g},{name:"support.object",pattern:/object/g},{matches:{1:"keyword"},pattern:/\b(not|self|in|from)(?=\(|\b)/g},{matches:{1:"keyword.class",2:"meta.class-name",3:"meta.parent.class-name"},pattern:/(class)\s+(\w+?)\((\w+?)\)/g},{matches:{1:"keyword",2:"support.magic"},pattern:/(def)\s(__.*?)(?=\()/g},{matches:{1:"keyword",2:"meta.function"},
pattern:/(def)\s(.*?)(?=\()/g}]);window.a=window.a||{};
Rainbow.extend("html",[{name:"php",matches:{2:{language:"php"}},pattern:/&lt;\?(php)?([\s\S]*?)(\?&gt;)/gm},{name:"css",matches:{"0":{language:"css"}},pattern:/&lt;style(.*?)&gt;([\s\S]*?)&lt;\/style&gt;/gm},{name:"js",matches:{"0":{language:"javascript"}},pattern:/&lt;script(?! src)(.*?)&gt;([\s\S]*?)&lt;\/script&gt;/gm},{name:"comment.html",pattern:/&lt;\!--[\S\s]*?--&gt;/g},{matches:{1:"support.tag.open",2:"support.tag.close"},pattern:/(&lt;)|(&gt;)/g},{name:"support.tag",matches:{1:"support.tag",
2:"support.tag.special",3:"support.tag-name"},pattern:/(&lt;)(\/|\!?)(\w+)/g},{matches:{1:"support.attribute"},pattern:/([a-z-]+)(?=\=)/g},{matches:{1:"support.operator",2:"string.quote",3:"string.value",4:"string.quote"},pattern:/(=)('|")(.*?)(\2)/g},{matches:{1:"support.operator",2:"support.value"},pattern:/(=)([a-zA-Z\-0-9]*)\b/g},{name:"support.attribute",pattern:/(\w+)(?=&gt;)/g}],!0);window.a=window.a||{};
Rainbow.extend("php",[{name:"support",pattern:/\becho\b/g},{matches:{1:"variable.dollar-sign",2:"variable"},pattern:/(\$)(\w+)\b/g},{name:"keyword.dot",pattern:/\./g},{name:"keyword",pattern:/\b(continue|break|case|require(_once)?|include(_once)?)\b/g},{matches:{1:"keyword",2:{name:"support.class",pattern:/\w+/g}},pattern:/(instanceof)\s([^\$].*?)(\)|;)/g},{matches:{1:"support.function"},pattern:/\b(apc_(fetch|store)|array(_sum|_rand)?|asort|count|empty|explode|file_(get_contents|exists)|get_(called_)?class|getenv|in_array|is_(numeric|array|link)|isset|json_(encode|decode)|mt_rand|rand|rmdir|round|spl_autoload_register|str(tolower|str|pos|_replace)|trigger_error|un(link|set))(?=\()/g},{name:"phptag",
pattern:/(&lt;\?(php)?|\?&gt;)/g},{matches:{1:"keyword.namespace",2:{name:"support.namespace",pattern:/\w+/g}},pattern:/\b(namespace\s)(.*?);/g},{matches:{1:"keyword.class.description",2:"keyword.class",3:"meta.class-name",4:"keyword.extends",5:"meta.parent.class-name"},pattern:/\b(abstract|final)?\s?(class)\s(\w+)(\sextends\s)?([\w\\]*)?\s?\{?\n/g},{name:"keyword.static",pattern:/self::/g},{matches:{1:"keyword",2:"support.magic"},pattern:/(function)\s(__.*?)(?=\()/g},{matches:{1:"keyword.new",2:{name:"support.class",
pattern:/\w+/g}},pattern:/\b(new)\s([^\$].*?)(?=\)|\(|;)/g},{matches:{1:{name:"support.class",pattern:/\w+/g}},pattern:/([\w\\]*?)::\b/g},{matches:{2:{name:"support.class",pattern:/\w+/g}},pattern:/(\(|,\s?)([\w\\]*?)(?=\s\$)/g}]);window.a=window.a||{};
Rainbow.extend("ruby",[{matches:{1:{name:"keyword.operator",pattern:/\=/g},2:"string"},pattern:/(\(|\s|\[|\=|\=&gt;)(&lt;&lt;\-(\S+)[\s\S]*?(\3)|&lt;&lt;(\S+)[\s\S]*?(\5)|('|")[\s\S]*?(\7))/gm},{name:"comment",pattern:/^=begin[\s\S]*?^=end|\#[\s\S]*?$/gm},{name:"integer",pattern:/\b(0x[\da-f]+|\d+)\b/g},{name:"variable.global",pattern:/\$(\w+)\b/g},{name:"variable.class",pattern:/@@(\w+)\b/g},{name:"variable.instance",pattern:/@(\w+)\b/g},{name:"constant",pattern:/\b[A-Z0-9_]{2,}\b/g},{matches:{1:{name:"keyword.operator",
pattern:/\=/g},2:"constant"},pattern:/(\(|\s|\[|\=)(:('|")[\s\S]*?(\3)|:\w+)/gm},{matches:{1:"keyword"},pattern:/\b(alias|and|begin|break|case|class|continue|def|defined|do|else|elsif|end|ensure|extend|false|for|if|in|include|module|next|nil|not|or|redo|require|rescue|retry|return|self|super|then|true|undef|unless|until|when|while|yield)(?=\(|\b)/g},{matches:{1:"keyword.class",2:"meta.class-name",4:"meta.parent.class-name"},pattern:/(class|module)\s+(\w+)(<\s+(\w+))?/g},{name:"meta.class-name",pattern:/\b[A-Z]\w*[a-z]\w*\b/g},
{matches:{1:"keyword",2:"meta.function"},pattern:/(def)\s(.*?)(?=\()/g}],!0);window.a=window.a||{};
Rainbow.extend("css",[{name:"comment",pattern:/\/\*[\s\S]*?\*\//gm},{name:"constant.hex-color",pattern:/#([a-fA-F0-9]{3}|[a-fA-F0-9]{6})(?=;|\s)/g},{matches:{1:"integer",2:"keyword.px"},pattern:/(\d+)(px)/g},{name:"string",pattern:/('|")(.*?)\1/g},{name:"support.css-property",pattern:/[\w-]+(?=\s|:)(?!.*\{)/g},{matches:{1:[{name:"meta.sass",pattern:/&amp;/g},{name:"meta.class",pattern:/\.[\w\-_]+/g},{name:"meta.id",pattern:/\#[\w\-_]+/g},{name:"meta.pseudo",pattern:/:[\w\-_]+/g},{name:"meta.tag",
pattern:/\w+/g}]},pattern:/([\w\ ,:\.\#\&\;\-_]+)(?=.*\{)/g},{matches:{2:"support.vender-prefix",3:"support.value"},pattern:/(:|,)\s?(-o-|-moz-|-webkit-|-ms-)?([a-zA-Z-]*)(?=\b)(?!.*\{)/g},{matches:{1:{name:"meta.style-tag",pattern:/\w+/g}},pattern:/&lt;\/?(.*?)(?=\=|&gt;)/g}],!0);
